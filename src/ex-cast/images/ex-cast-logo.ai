%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 22.0.1%%For: (p3xx33) ()%%Title: (ex-cast-logo.ai)%%CreationDate: 12/4/17 8:43 PM%%Canvassize: 16383%%BoundingBox: 3 5 326 325%%HiResBoundingBox: 3 5 326 325%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 165.5 164.5 165.5 164.5%AI3_TileBox: -123 -191 453 543%AI3_DocumentPreview: None%AI5_ArtSize: 330 330%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -639 651 1 1908 1027 26 0 0 6 43 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-140 -232%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 23430 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD80FFCAFFFFCAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CA%A8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CA%A8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CA%A8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CA%A8CAA8CAA8CAA8CAA8CAA8FD05FFCAFD7A6876FFFFCAFFA1684468446844%684468446844684468446844684468446844684468446844684468446844%684468446844684468446844684468446844684468446844684468446844%684468446844684468446844684468446844684468446844684468446844%68446844684468446844684468446844684468446844684468449AFD04FF%CAFD7A6876FFFFCAFFA16868684468686844686868446868684468686844%686868446868684468686844686868446868684468686844686868446868%684468686844686868446868684468686844686868446868684468686844%686868446868684468686844686868446868684468686844686868446868%6844686868446868684468449AFD04FFCAFD0468446868684468686844FD%076844FD076844FD0B684468686844FD0B684468686844FD0B6844686868%44FD0B6844FD07684468686844FD0768446868684468686844FD05689AFF%FFA8FFA1684468446F769A769A6F9A769A686844684468689A6F9A6F6844%68446F769A6F68446844686F9A769A6F9A769A6F9A6F6844684468449A76%9A6F9A766F446844684468446844686F9A6F9A769A6F9A766F4468446844%686F9A6F9A6F684468446F769A769A446844684468446F769A769A6F9A76%9A6F684468449AFD04FFCAFD0468A1FD08FFA1FD0668CAFFFFCAFD0468CA%FFFF9AFD046844A1FD09FFCAFD05686FCAFD07FF9AFD0868FD09FF6FFD06%68CAFD04FFFD0468A1FD04FF93FD0668A1FD08FFA1FD04689AFFFFCAFFA1%68446844A1FD08FF76686868446844A1FFFFFF6F44686FFFFFFF68684468%68689AFD09FFA1684468686844CAFD08FF6F68446868684468A8FD08FF9A%446868684468A1FD04FF6F446868CAFD04FFFD0468446844A1FD08FF9A68%6868449AFD04FFCAFD0468A1FFFFFFA1CAA1CAA89A44FD05686FFFFFFF9A%6844A1FFFFA1FD06689AA8CAA8FFFFFFA8CAA8A1FD0668A8FFFFFFA1CAFF%FFFFCAFD0768FFFFFFCACAA8CAA1CA6FFD0668CAFD04FF9A68686FFD05FF%6F44FD05689AFFFFFFA8CAA1CAA89A4468686876FFFFCAFFA168446844A1%FFFFA168446844684468446844684468A1FFFFCA4468A8FFFF6F44684468%44684468446FFFFFFF93446844684468446868CAFFFF9A6844A1FFFFA868%446844684468A8FFFFA1446844684468446844684468A1FD04FFA144686F%FD05FF68684468446844A1FFFFA8684468446844684468449AFD04FFCAFD%0468A1FFFFCAFD0D68A1FFFFFF686FFFFFFFFD0A686FFFFFFF6FFD0968A8%FFFFA144689AFFFFFFFD0768FFFFFFA1FD0C68CAFD04FFA168449AFD05FF%93FD06689AFFFFFFFD0A6876FFFFCAFFA168686844A1FFFFA16868684468%686844686868446868FFFFFF6F9AFFFFA1684468686844686868446FFFFF%FF9A446844686868446868CAFFFF9A68449AFFFFA868446844686868A8FF%FFA1446868684468686844686868A1FD04FFCA686876FD05FF6F68446868%6844A1FFFFA8686868446868684468449AFD04FFCAFD0468A1FFFFCAFD0E%68A8FFFFCACAFFFF9AFD0A686FFFFFFF6FFD0968CAFFFFA1686876FFFFFF%FD0768CAFFFFA1FD0C68CAFD05FF6F68A1FD05FF93FD06689AFFFFCAFD0A%689AFFFFA8FFA168446844A1FFFFA168446844684468446844684468449A%FD05FFCA44684468446844684468446FCAFFFF6F446844684468446844CA%FFFF7668449AFFFFA868446844684468A8FFFFA144684468446844684468%4468A1FFA8FFFFFF6F68A1FFA8FFFFFF68684468446844A1FFFFA8684468%446844684468449AFD04FFCAFD0468A1FFFFFFA1C3A1C36FFD09686FFD05%FF9AFD0B686FFFFFFF6FFD08686FCAFFFFA1686FA8FFFFC3FD0768FFFFFF%CAA1A1CAA16FFD0768CAFFFFA8FFFF9A68FFFFCACAFFFF93FD06689AFFFF%FFA1C3A1CA6FFD05689AFFFFCAFFA168446844A1FD07FF9A446868684468%68684468A1FD04FF6F44686868446868684468446FFFFFFF6F4468686844%68686844CAFFFFCAFD04FFCA6868446868684468A8FD07FF686844686868%4468A1FFCAA1FFFF7668FFFFA1FFFFFFFD0468446844A1FD07FF9A446868%68449AFD04FFCAFD0468A1FD07FF6FFD0A68FD05FF6FFD0B686FFFFFFF6F%FD0968A8FD07FF9AFD0868FD08FF6FFD0768CAFFFF9AFFFFA16FFFFFA1CA%FFFF6F44FD05689AFD07FF9AFD056876FFFFCAFFA168446844A1FFFFA8A1%9AA1766F4468446844684468446FFD05FFA144684468446844684468446F%FFFFFF9A446844684468446868CAFD08FF6F68446844684468A8FFFFCA76%A19A9A4468446844684468A1FFFF9AA8FFA19AFFFF6FFFFFFF6868446844%6844A1FFFFA8A19AA1766F44684468449AFD04FFCAFD0468A1FFFFCA6868%44FD0B68A1FD06FF6FFD0A686FFFFFFF6FFD0968A8FFFFA1689AFFFFFFCA%FD0768FFFFFFA168686844FD0868CAFFFF6FCAFFFFA1FFCA93FFFFFF93FD%06689AFFFFFF686844FD076876FFFFCAFFA168686844A1FFFFA168686844%68686844686868446868CAFFFF9AFFFFFF6F684468686844686868446FFF%FFFF9A446844686868446868CAFFFF9A6844A1FFFFA868446844686868A8%FFFFA1446868684468686844686868A1FFFF6F9AFFFFCAFFCA6FFFFFFF6F%684468686844A1FFFFA8686868446868684468449AFD04FFCAFD0468A1FF%FFCAFD0C68449AFFFFA868CAFFFFCAFD0A686FFFFFFF6FFD0968CAFFFFA1%686876FFFFFFFD0768CAFFFFA1FD0C68CAFFFF6F9AFD04FFA16FFFFFFF93%FD06689AFFFFCAFD0A689AFFFFA8FFA168446844A1FFFFA1684468446844%684468446844689AFFFFA144A1FFFFA86F4468446844684468446FCAFFFF%6F446844684468446844CAFFFF7668449AFFFFCA68446844684468A8FFFF%A1446844684468446844684468A1FFFF6F6FFD04FF9A44FFFFFF68684468%446844A1FFFFA8684468446844684468449AFD04FFCAFD0468A1FFFFCA44%68686844FD0868FFFFFF6F686FFFFFFF9AFD09686FFFFFFF6FFD08686FCA%FFFFA1686876FFFFFFFD0768FFFFFFA16844FD04686FFD0568CAFFFF6F6F%FD04FF6F6FFFFFFF93FD06689AFFFFCA4468686844FD05689AFFFFCAFFA1%68446844A1FFFFA8A176A19AA16F68686844684493FFFFA8684468A8FFFF%CA4468446868684468446FFFFFFF6F446868684468686844CAFFFF9A6844%9AFFFFCA68446868684468A8FFFFCA9AA19AA19A6F446868684468A1FFFF%9368FD04FF6F68FFFFFFFD0468446844A1FFFFCAA176A19AA16F68686844%9AFD04FFCAFD0468A1FD08FF9A44FD0568A1FFFFA1686844A1FFFFCA6FFD%08686FFFFFFF6FFD0968A8FFFFA144689AFFFFFFFD0768FD09FF6FFD0668%CAFFFF6F68A8FFFFFF686FFFFFFF6F44FD05689AFD08FFA14468686876FF%FFCAFFA168446844A1FD08FF76684468446868FFFFFF6F6844686FFFFFFF%7668446844684468446FFFFFFF9A446844684468446868FFFFFF9A68449A%FFFFFF6F446844684468A8FD08FF9A446844684468A1FFFF6F44A8FFFFA8%6868FFFFFF6F684468446844A1FD08FF9A684468449AFD04FFCAFD04689A%CAA1CAA1C3A1CAA19AFD056893A1CAA16F6868686FA1C3A19AFD0968A1A1%CA6FFD09689ACAA19A68686FC3A1CA6FFD0668A1A1C3A1CAA1C3A1CA6FFD%0668A1A1C36F6876CAA1A1686FA1CAA16FFD06686FCAA1CAA1C3A1CAA19A%FD046876FFFFCAFFA1686868446844684468446844684468446868684468%446844686868446844684468686844686868446844684468686844686868%446868684468446844684468446868684468686844684468446844684468%686844686868446844684468446844686868446868684468686844684468%44684468446844684468449AFD04FFCAFD7A689AFFFFA8FFA16844684468%446844684468446844684468446844684468446844684468446844684468%446844684468446844684468446844684468446844684468446844684468%446844684468446844684468446844684468446844684468446844684468%4468446844684468446844684468446844684468446844684468449AFD04%FFCAFD0D686F6FFD059A6F6FFD3368FD059A7693FD2A689AFFFFCAFFA168%446868684468686844686FA1A8FD07FFCACA766844686868446868684468%68684468449AA1CAA1A8A1CAA1A8A1CAA1CA6F6868684468686844686868%44FD0468A1A8FD08FFCAA16F446844686868449AA8A8A1CAA1A8A1CAA1A8%A1CAA1A8A1CAA1A8A1CAA1A8A1CAA1CA9A686868449AFD04FFCAFD096893%A8FD0DFFCA9A44FD0D68CAFD0CFFA144FD0B6844689AFD0EFFCAFD066876%FD1AFFCAFD046876FFFFCAFFA168446844684468449AFD11FFA144684468%446844684468446844FD0DFFA168446844684468446844684468A1FD11FF%68684468449AFD1AFFA1684468449AFD04FFCAFD0668449AFD13FFC3FD0B%6893FD0DFFCAFD0C68A1FD13FFFD046876FD1AFFCAFD046876FFFFCAFFA1%6868684468446FFD15FF9A446844686868446868686FFD0DFFA868446868%684468686844689AFD14FFCA4468449AFD1AFFA1684468449AFD04FFCAFD%0668A8FD15FFCA6FFD0968A1FD0EFF6FFD0A68FD16FF9A44689AFD1AFFCA%FD04689AFFFFA8FFA168446844686FFD17FF76684468446844684468A1FD%0EFF9A446844684468446844A1FD16FFA868449AFD1AFFA1684468449AFD%04FFCAFD046844C3FD0AFFA8C3A1FD0AFFCAFD0968CAFD0EFF9AFD0968A8%FD0AFFCAA1CAFD0AFF6F689AFD1AFFCAFD04689AFFFFCAFFA16844686868%A8FD09FF6F684468689AFD09FF6F4468446868684468CAFD0EFFA1446844%68686844686FFD09FFA16F4468446FA8FD08FFA144FD046F9A6F6F6F939A%FD08FFA86F9A6F6F6F9A6F9A6F686868449AFD04FFCAFD04686FFD09FF6F%FD056844A1FD08FF6FFD07686FFD0FFFA1FD0768449AFD08FFCA68446868%68446FFD08FFA1FD056844686868449AFD08FFA1684468686844FD076876%FFFFCAFFA1684468449AFD08FFA16844684468446868FD08FF9A44684468%4468446FFD0FFFCA446844684468446876FD08FF9A44684468446844A1FD%07FFCA686844684468446844686FFD08FFA1446844684468446844684468%449AFD04FFCAFD04689AFD08FFA144FD0768A8FD07FFA1FD07689AFD07FF%A8FD08FF93FD0768CAFD08FF6FFD07689AFD08FF6FFD09689AFD08FFA1FD%0D6876FFFFCAFFA1686868449AFD08FF766844686868446844A8FD07FFA1%44686868446844A1FD06FFCAA1FD08FF6F68686844686868A1FD08FF6F44%6844686868449AFD08FF686844686868446868686FFD08FFA14468446868%68446868684468449AFD04FFCAFD04689AFD08FF9AFD0868A8FD07FFA1FD%0768A8FD07FF6FFD08FF9A44FD0668CAFD08FF6FFD07686FFD08FF93FD09%689AFD08FFA1FD0D689AFFFFA8FFA168446844A1FD08FF6F684468446844%6844CAFD07FFA144684468446844FD07FFA16FCAFD07FF9A684468446844%68A1FD08FF6F446844684468446FFD08FF686844684468446844686FFD08%FFA1446844684468446844684468449AFD04FFCAFD04689AFD08FF9AFD08%68A8FD07FFA1FD066893FD07FFCA68FD08FFCAFD0768C3FD08FF9AFD0868%9A9A9A769A9A9A766FFD09689AFD08FFA1FD0D689AFFFFCAFFA168446844%A1FD08FF766868684468686844CAFD07FFA14468446868686FFD07FF7668%A1FD07FFA8684468686844689AFD08FFA844686868446868684468446844%684468446868684468686844686FFD08FFA1446868684468686844686868%449AFD04FFCAFD04689AFD08FF9A44FD0768A1FD07FFA1FD06689AFD07FF%9A44A1FD08FFFD0668449AFD09FF6F44FD1768449AFD08FFA1FD0D6876FF%FFCAFFA168446844A1FD08FF766844684468446844A1FFFFCAFFA8FFFFA1%4468446844689AFD07FF6F6876FD08FF6F44684468446868FD09FFA16844%68446844684468446844684468446844684468446844686FFD08FFA14468%44684468446844684468449AFD04FFCAFD04689AFD08FF9A44FD08686F68%6F686F686FFD0768CAFD07FF6F449AFD08FF9AFD0768CAFD09FF6FFD1868%9AFD08FFA1FD0D6876FFFFCAFFA168686844A1FD08FF7668446868684468%68684468446844684468446868684468A8FD07FF686868FD08FFA1446844%68686844A1FD0AFFFD046844686868446868684468686844686868446868%686FFD08FFA1446844686868446868684468449AFD04FFCAFD04689AFD08%FF9AFD1768FD07FFA168686FCAFD07FFA1FD0868FD0BFFFD17689AFD08FF%A1FD0D689AFFFFA8FFA168446844A1FD08FF6F6844684468446844684468%44684468446844684468446FFD07FFA1446844CAFD07FFCA446844684468%44689AFD0AFFCA446844684468446844684468446844684468446844686F%FD08FFA1446844684468446844684468449AFD04FFCAFD04689AFD08FF9A%FD166876FD07FF9A686868A1FD07FFCA6FFD07686FCAFD0BFFFD15689AFD%08FFA1FD0D689AFFFFCAFFA168446844A1FD08FF76686868446868684468%68684468686844686868446844A1FD07FF9A446844A1FD08FF6F68686844%686868449AFD0CFF68684468686844686868446868684468686844686FFD%08FFA1446868684468686844686868449AFD04FFCAFD04689AFD08FF9A44%FD1568A1FD07FF6F6868689AFD08FF9A44FD076844A1FD0CFF6FFD116844%9AFD08FFA1FD0D6876FFFFCAFFA168446844A1FD08FF7668446844684468%446844684468446844684468446844CAFD06FFA86844684493FD08FF7668%446844684468446844A8FD0CFF6F68446844684468446844684468446844%686FFD08FFA1446844684468446844684468449AFD04FFCAFD04689AFD08%FF9A44FD14686FFD08FFFD04686FFD08FFC3FD0B68CAFD0CFF6FFD10689A%FD08FFA1FD0D6876FFFFCAFFA168686844A1FD08FF766844686868446868%684468686844686868446868686FFD07FFA16868684468CAFD07FFA16844%68686844686868446868CAFD0CFF6F686868446868684468686844686868%6FFD08FFA1446844686868446868684468449AFD04FFCAFD04689AFD08FF%9AFD15689AFD07FFA144FD0468CAFD08FFFD0D68CAFD0CFF6FFD0E689AFD%08FFA1FD0D689AFFFFA8FFA168446844A1FD08FF6F684468446844684468%4468446844684468446844689AFD07FF766844684468A1FD07FFCA6F4468%4468446844684468446844A1FD0BFFCA4468446844684468446844684468%6FFD08FFA1446844684468446844684468449AFD04FFCAFD04689AFD08FF%9AFD1568C3FD07FF9AFD046844A1FD08FF6FFD0E68C3FD0BFFCAFD0D689A%FD08FFA1FD0D689AFFFFCAFFA168446844A1FD08FF766868684468686844%68686844686868446868684468A8FD07FF6868446868686FFD08FF9A4468%44686868446868684468686844A1FD0BFF9A446844686868446868684468%6FFD08FFA1446868684468686844686868449AFD04FFCAFD04689AFD08FF%9A44FD1468FD07FFCA6FFD056893FD08FFA1FD0F6844A1FD0AFFCA6FFD0A%68449AFD08FFA1FD0D6876FFFFCAFFA168446844A1FD08FF766844684468%4468446844686868446868684468446FCAFD06FFCA44684468446868FD08%FFA84468446844684468446844684468446844A1FD0AFF76684468446844%68446844686FFD08FFA1446844684468446844684468449AFD04FFCAFD04%689AFD08FF9A44FD0768A1FD07FFA16868686FFD07FFA1FD0768CAFD07FF%CA6FFD1168CAFD0AFFFD0B689AFD08FFA1FD0D6876FFFFCAFFA168686844%A1FD08FF766844686868446844CAFD07FFA14468449AFD07FFA144686868%446844A8FD08FFFD0468446868684468686844686868446868CAFD09FF9A%446844686868446868686FFD08FFA1446844686868446868684468449AFD%04FFCAFD04689AFD08FF9AFD0868A8FD07FFA1686868A1FD07FF9AFD0768%A1FD08FF9A44FD11686FFD09FFA1FD0A689AFD08FFA1FD0D689AFFFFA8FF%A168446844A1FD08FF6F6844684468446844CAFD07FFA1446844CAFD08FF%A8CAA8CAA8CAA8FD09FF7668446868684468686844686868446844684468%A1FD08FFCA446844684468446844686FFD08FFA144684468446844684468%4468449AFD04FFCAFD04689AFD08FF9AFD0868A8FD07FFA168686FCAFD18%FFA1446868FD08FF9A44FD06689AFD08FFCA6FFD09689AFD08FFA1FD0D68%9AFFFFCAFFA168446844A1FD08FF766868684468686844CAFD07FFA14468%68FD19FFA168446FFD08FF766844686868446868FD09FFFD046844686868%44686FFD08FFA1446868684468686844686868449AFD04FFCAFD04689AFD%08FF9A44FD0768A1FD07FFA168689AFD19FFCA686868FD08FF9AFD0868A8%FD08FF6F44FD0768449AFD08FFA1FD0D6876FFFFCAFFA168446844A1FD08%FF766844684468446844A8FD07FFA1446876FD19FFA86F4468A8FD07FF6F%6844684468446844A8FD08FF686844684468446844686FFD08FFA1446844%684468446844684468449AFD04FFCAFD04689AFD08FF9A44FD0768A1FD07%FFA16868A1FD1AFF6F6868FD08FF9AFD0868A1FD08FF93FD09689AFD08FF%A1FD0D6876FFFFCAFFA1686868449AFD08FF9A6844686868446868CAFD07%FFA14468A1FD1AFF9A4468A8FD07FF9A6868684468686844CAFD08FF6868%44686868446868686FFD08FFA1446844686868446868684468449AFD04FF%CAFD04686FFD08FFCAFD0668446FFD08FF9A6868FD08FFCAA1CAA1CAA8CA%A1CAA1CAFD08FF9A6868CAFD07FFCA44FD06686FCAFD07FFCA6FFD09689A%FD08FFA1FD0D689AFFFFA8FFA1684468446FFD09FF6F44684468446876FD%08FF9A4468A8FD07FF446844684468446844686FFD08FFA14468A1FD08FF%6F44684468446876FD08FFCA446844684468446844686FFD08FFA1446844%684468446844684468449AFD04FFCAFD0568FD09FFCA93FD04689AFD09FF%6F686FFD07FFA8FD0A686FFD08FFA868689AFD08FFCA9AFD04689AFD09FF%A1FD0A689AFD08FFA1FD0D689AFFFFCAFFA16844686868A1FD0AFFCAA1CA%A8FD09FFA868449AFD07FFA84468686844686868446868CAFD08FF686868%FD0AFFCAA1A1A8FD0AFF9A446868684468686844686FFD08FFA144686868%4468686844686868449AFD04FFCAFD05689AFD17FFA14468A1FD07FFA1FD%0B68A1FD08FF6F4468A8FD17FFFD0A68449AFD08FFA1FD0D6876FFFFCAFF%A1684468446844A8FD16FF686844A1FD07FF9A4468446844684468446844%A1FD08FF6F68449AFD16FF7668446844684468446844686FFD08FFA14468%44684468446844684468449AFD04FFCAFD06686FFD15FF9A686868CAFD07%FF6FFD0B689AFD08FFA1446868CAFD14FFA86FFD0B689AFD08FFA1FD0D68%76FFFFCAFFA16868684468686876FD13FFA1FD0468FD08FF6F4468446868%6844686868449AFD08FFA168446868CAFD13FF6F44686868446868684468%68686FFD08FFA1446844686868446868684468449AFD04FFCAFD08689AFD%11FFA1FD04686FFD08FFFD0C686FFD08FFCAFD0568CAFD11FF9AFD0D689A%FD08FFA1FD0D689AFFFFA8FFA16844684468446844686FCAFD0EFF766844%6844686FFD07FFA868446844684468446844684468A8FD07FFA868446844%6868A1FD0EFFA16F44684468446844684468446844686FFD08FFA1446844%684468446844684468449AFD04FFCAFD0B689AA1FD09FFA8A1FD07689ACA%FFCAFFA8FFCAA1FD0D68CACAFFA8FFCAFFCAFF6FFD05684493A1FD09FFCA%CA6FFD106893CAFFCAFFA8FFCAFF9AFD0D689AFFFFCAFFA1684468686844%686868446844686894769A9AA17693686844684468686844686868446868%684468686844686868446868684468686844686868446868684468686844%6868684468686F6F9A9AA1769A6F68446868684468686844686868446868%68446868684468686844686868446868684468686844686868449AFD04FF%CAFD0E684468686844FD37684468686844FD2B6876FFFFCAFFA168446844%684468446844684468446844684468446844684468446844684468446844%684468446844684468446844684468446844684468446844684468446844%684468446844684468446844684468446844684468446844684468446844%684468446844684468446844684468446844684468446844684468449AFD%04FFCAFD7A6876FFFFCAFFA1686868446844684468446844684468446844%684468446844684468446844684468446844684468446844684468446844%684468446844684468446844684468446844684468446844684468446844%684468446844684468446844684468446844684468446844684468446844%68446844684468446868684468449AFD04FFCAFD04689ACAA8CAA1CAA8CA%A1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CA%A8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CA%A1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CAA8CAA1CA%A8CAA1CAA8CAA1CAA8CAA1CAA8CAA8C3FD04689AFFFFA8FFA168446844A1%FD70FFA8684468449AFD04FFCAFD0468A1FD71FFFD04689AFFFFCAFFA168%446844A1FD70FFA8686868449AFD04FFCAFD0468A1FD70FFCAFD046876FF%FFCAFFA168446844A1FD70FFA8684468449AFD04FFCAFD0468A1FD71FFFD%046876FFFFCAFFA168686844A1FD70FFA8684468449AFD04FFCAFD04686F%9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F%9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F%9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F%9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9A6F9AFD04689AFFFFA8%FFA168446844684468446844684468446844684468446844684468446844%684468446844684468446844684468446844684468446844684468446844%684468446844684468446844684468446844684468446844684468446844%684468446844684468446844684468446844684468446844684468446844%684468449AFD04FFCAFD7A689AFFFFCAFFA1684468686844684468446844%684468446844684468446844684468446844686868446844684468686844%684468446868684468446844684468446868684468446844686868446844%684468446844686868446868684468446844684468446844684468446844%68446844686868446868684468446844686868449AFD04FFCAFD04686F9A%769A9A6F44939A9A769A6868686F9AA19A936868689A9A9A6F68689A769A%9A934468689AA1C36F6868686F9A9A936868689AA1A16F689A9A769A9A9A%6F6868686FA1A19A689A9A9368686FA16F689AA1A193689A769A9A9A769A%9A9A769A9A6F6F9A9A6F686F9A9A6F68689AA1A16FFD056876FFFFCAFFA1%68446844A1FD04FFA86876FD05FF6F68A1FD04FF934468A8FFFFA1446FFD%05FFA1449AFD04FF766844CAFFFFA16844A1FD04FF6FFD06FFA144686FFD%04FF9A76FFA16844A8FF9AA1FFFFFFA89AFD06FFA1FD05FF76CAFFFF6F68%6FFFFFCA44A1FD04FF6F684468449AFD04FFCAFD0468A1FFCAC3FFFF9AA1%FFFFA1FFFFA16FFFFFA1A8FFA86868FFFFFFA1686FFFFFCAA1FFFF93CAFF%A1C3FFFF6868CAFFFFCA686FFFFF9ACAFFFFA1C3FFFFA8CA6F6868CAFFCA%9AFFFF9AFFFF686FFFFF76FFFFA1A1FFA8A1A1FFFFCAA1A1FFFFA1CAA19A%A8FFFFA1449AFFFFA893FFFFA1CAFFFFFD046876FFFFCAFFA168686844A1%FFA144A1FFA176FFA16876FFA1A1FFA84493FFFF446FFFFFFFCA446FFFFF%4468FFFF76FFFF6844FFFF6F68FFFFFFA8686FFFA86868FFA86844CAFF93%44684468CAFF6F68A8FF6FCAFF6F68FFA19AFFCA446FFFCA4468CAFF6F44%6FFFA868446868CAFFFFA1689AFFFFCA6FFFFF6868FFFF684468449AFD04%FFCAFD0468A1FFA1689AFFA19AFFCA449AFFCA9AFFA1686FFFA8689AFFA1%FFFF6868FFFF6868FFFFA1FFFF6868FFFF6893FFCAFFFF6893FFFF68686F%936868CAFF6FFD0468FFFF9A449A6F68A1FF9A9AFFA16FFFCA6F689A6F68%68FFFF9A449AFFFF68684468CAFFFFCA68CAFFFFA86FFFFF6F686F9AFD04%689AFFFFA8FFA168446844A1FFA168CAFF9A76FFA16876FFA19AFFA14493%FFCA44A1FF9AA8FF686FFFFF6868A8FF76FFA868446F686876FF76CAFF6F%44CAFFA84468446844CAFF6F44684468A1FFCA6F4468449AFFCAA1FF6F68%CAFFA16844684468CAFF6F686FFFA868446844CAFFFFA868A8FFFFCA44CA%FFCA446844684468449AFD04FFCAFD0468A1FD05FF68A1FFFFA1FFFF9A9A%FFA1686FFFA868A1FF6FFFFF9A68FFFF6868FFFFA1FFFFFD0568A1FF9AA1%FF9A686FFFFFCA6868686FCAFF6FFD04686FFFFFCA93686868FFFFFFCA6F%689AFFFFA1FD0468FFFF9A689AFFFFCAFFA168CAFFA8FF6FFFCAFFCA686F%FFFFCAFD06689AFFFFCAFFA168446844A1FFFFA8FFFF9376FD04FFCA44A1%FFA1449AFFCA44FFFF68A1FF7668FFFF6868CAFF76FFCA6F44684468A1FF%68A1FFA1446876FFFFCA686844CAFF6F44686868446FCAFFA86F4468A1FF%FFA14468449AFFFFA1684468FFFF6F686FFD04FFA844CACAA1FF9AFFCACA%CA68686FFFFFCA44686868449AFD04FFCAFD0468A1FFA1689AFFA1A1FFCA%76FFFF9A9AFFA1686FFFCA6FFFFF44A1FFA168FFFF6F68FFFFA1FFFF6868%6F9A68FFFF686FFFA868446876FFFFA16868A8FF6FFD05684493FFFFA168%68A1FFFF7668686844A1FFFF9A6868FFFF9A449AFFFF6F936868A8FF9AFF%A8FFA1FFA86844686FFFFFA14468686876FFFFCAFFA168446844A1FFA144%6FFFCA76FFA1446FFFA19AFFA1446FFFCA6FFFA89AA1FFA16FFFFF4468CA%FF76FFCA6844FFFF6FA8FF9AA1FFCA6F9A6F689AFFA86844CAFF9A446844%68769A4493FFFF68686FFFA86F446F766F44A1FFCA4468A8FF6F686FFFA8%68446868CAA89AFFFFA8A1FFCA689A6F6876FFA8684468449AFD04FFCAFD%0468A1FFA1686FFFA8A1FFCA449AFFC39AFFA1686FFFA89AFD06FF6FFFFF%6868FFFFA1FFFF6868FFFF9AFD05FFCAA1FFCA4493FFFF6868CAFF6FFD04%68FFFF6868FFFF9A686FFFFF68689AFFA1686FFFA86868FFFF9A449AFFFF%FD0468CAFF6FFFFFFF9AFFA89AFFCA4493FFFFFD046876FFFFCAFFA16868%6844A1FFA86FA1FFA876FFA1686FFFA19AFFFF6FA1FFCA9AFFA19A9AFFA8%9AFFFF6F9AFFFF6FFFFF9A6FFFCAA1FFCA6F9AA8FF9AFFA8939AFFA86868%CAFF9A44684468CAFF769AFFFF68686FFFCA68449AFFFF6FA1FFCA4468CA%FF6F686FFFCA936F9A68CACA6FA8FFA89AFFCA6FFFFF6F76FFA868446844%9AFD04FFCAFD0468A1FD05FF6FA1FFCA449AFFCA68FD05FF76CAFF9A4468%FFFF9AFD05FFA868A1FD04FFC3A1FF9A6868CAFFA1A8FD04FFA14468CAFF%6F68686844A1FD04FFA8684493FFFF686868FD05FF766868FFFF9A449AFD%05FFA1CAFF68CAFFCA6FFFCA68A1FD04FFA1FD04689AFFFFA8FFA1684468%449AA1CAA1A16F686FCA76686FCAA1686FCAA8CA7668A1CA686844A1A89A%A1CAA1A876684468A1CAA8A1449AA86F446876CA6F68A1CAA89A446844A1%A86F4468446844A1A8CAA16F446868CAA16844686FA8A8CA76684468A1CA%6F686FA8A1CAA1CA6FA1A1686FCA766FA1A14468A1CAA89A44684468449A%FD04FFCAFD15686FFD3F686FFD24689AFFFFCAFFA1684468686844686868%446868684468686844686868446868684468686844686868446868684468%686844686868446868684468686844686868446868684468686844686868%446868684468686844686868446868684468686844686868446868684468%68684468686844686868446868684468686844686868449AFD04FFCAFD7A%6876FFFFCAFFA16844684468446844684468446844684468446844684468%446844684468446844684468446844684468446844684468446844684468%446844684468446844684468446844684468446844684468446844684468%446844684468446844684468446844684468446844684468446844684468%4468446844684468449AFD04FFCA6F6F6F936F936F936F936F936F936F93%6F936F936F936F936F936F936F936F936F936F936F936F936F936F936F93%6F936F936F936F936F936F936F936F936F936F936F936F936F936F936F93%6F936F936F936F936F936F936F936F936F936F936F936F936F936F936F93%6F936F936F936F936F936F936F936F6F9AFFFFCAFD80FFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFFFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF%A8FFCAFFA8FFCAFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Line Plugin Group) (Line artwork) (Adobe Illustrator.app)%AI8_PluginGroupInfo(Adobe Sketch Plugin Group) (Sketch artwork) (Adobe Illustrator.app)%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Adobe Illustrator.app)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.749721 0.679194 0.670497 0.901457 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 AuUuuuq0 J 0 j 1 w 10 M []0 d0 XR5 325 m325 325 L325 5 L5 5 L5 325 LhWnQU0 Auq0 J 0 j 1 w 10 M []0 d0 XR5 325 m325 325 L325 5 L5 5 L5 325 LhWnQ0 Aq0 J 0 j 1 w 10 M []0 d0 XR5 325 m325 325 L325 5 L5 5 L5 325 LhWn5 325 m325 325 L325 5 L5 5 L5 325 LhWnQ0 Aq0 J 0 j 1 w 10 M []0 d0 XR5 325 m325 325 L325 5 L5 5 L5 325 LhWn5 325 m325 325 L325 5 L5 5 L5 325 LhWn5 797 m617 797 L617 5 L5 5 L5 797 LhWnu0 O0.23621 1 1 0.218967 0.627451 0 0 Xa0 330 m330 330 L330 0 L0 0 L0 330 LfUQUUU0 Auuuq0 J 0 j 1 w 10 M []0 d0 XR5 325 m325 325 L325 5 L5 5 L5 325 LhWnQU0 Auq0 J 0 j 1 w 10 M []0 d0 XR5 325 m325 325 L325 5 L5 5 L5 325 LhWnQ0 Aq0 J 0 j 1 w 10 M []0 d0 XR5 325 m325 325 L325 5 L5 5 L5 325 LhWn5 325 m325 325 L325 5 L5 5 L5 325 LhWnQ0 Aq0 J 0 j 1 w 10 M []0 d0 XR5 325 m325 325 L325 5 L5 5 L5 325 LhWn5 325 m325 325 L325 5 L5 5 L5 325 LhWn5 797 m617 797 L617 5 L5 5 L5 797 LhWnu0 O0 0 0 0 1 1 1 Xa5 325 m325 325 L325 5 L5 5 L5 325 LfUQUUU0 Auuuq0 J 0 j 1 w 10 M []0 d0 XR5 325 m326 325 L326 5 L5 5 L5 325 LhWnQU0 Auq0 J 0 j 1 w 10 M []0 d0 XR5 325 m326 325 L326 5 L5 5 L5 325 LhWnQ0 Aq0 J 0 j 1 w 10 M []0 d0 XR5 325 m326 325 L326 5 L5 5 L5 325 LhWn5 325 m325 325 L325 5 L5 5 L5 325 LhWnQ0 Aq0 J 0 j 1 w 10 M []0 d0 XR5 325 m326 325 L326 5 L5 5 L5 325 LhWn5 325 m325 325 L325 5 L5 5 L5 325 LhWn5 797 m617 797 L617 5 L5 5 L5 797 LhWnu0 O0.259373 1 1 0.294347 0.564706 0 0 Xa10 320 m320 320 L320 10 L10 10 L10 320 LfUQUUU0 A0 O0 0 0 0 1 1 1 Xa0 J 0 j 1 w 10 M []0 d0 XR87.8 153.2 m87.8 134.6 L87.8 112.2 76.6 99.4 55 99.4 c33.4 99.4 22.2 112.2 22.2 134.6 C22.2 207.4 L22.2 229.8 33.4 242.6 55 242.6 c76.6 242.6 87.8 229.8 87.8 207.4 C87.8 193.8 L67 193.8 L67 208.8 L67 218.8 62.6 222.6 55.6 222.6 c48.6 222.6 44.2 218.8 44.2 208.8 C44.2 133.2 L44.2 123.2 48.6 119.6 55.6 119.6 c62.6 119.6 67 123.2 67 133.2 C67 153.2 L87.8 153.2 L87.8 153.2 Lf*u167.2 101 m145 101 L141.2 126.4 L114.2 126.4 L110.4 101 L90.2 101 L112.6 241 L144.8 241 L167.2 101 Lf1 D117 145.4 m138.2 145.4 L127.6 216.2 L117 145.4 Lf*U0 D202.8 242.6 m224.2 242.6 235.2 229.8 235.2 207.4 C235.2 203 L214.4 203 L214.4 208.8 L214.4 218.8 210.4 222.6 203.4 222.6 c196.4 222.6 192.4 218.8 192.4 208.8 c192.4 180 235.4 174.6 235.4 134.6 c235.4 112.2 224.2 99.4 202.6 99.4 c181 99.4 169.8 112.2 169.8 134.6 C169.8 143.2 L190.6 143.2 L190.6 133.2 L190.6 123.2 195 119.6 202 119.6 c209 119.6 213.4 123.2 213.4 133.2 c213.4 162 170.4 167.4 170.4 207.4 c170.4 229.8 181.4 242.6 202.8 242.6 cfuuuq3 325 m324 325 L324 5 L3 5 L3 325 LhWnu0 O0 0 0 0 1 1 1 Xa21.8 87 m308 87 L308 67 L21.8 67 L21.8 87 LfUQUUU0 A0 O0 0 0 0 1 1 1 Xa0 J 0 j 1 w 10 M []0 d0 XR239.4 241 m307.4 241 L307.4 221 L284.4 221 L284.4 101 L262.4 101 L262.4 221 L239.4 221 L239.4 241 Lf*u37.3 48.3 m37.3 47.1 L37.3 43.7 36.3 41.6 34 40.5 C36.8 39.4 37.9 36.9 37.9 33.5 C37.9 30.8 L37.9 25.7 35.2 23 30 23 C21.9 23 L21.9 55.8 L29.7 55.8 L35 55.9 37.3 53.4 37.3 48.3 Cf1 D27 51.2 m27 42.5 L29 42.5 L30.9 42.5 32.1 43.3 32.1 46 C32.1 47.8 L32.1 50.2 31.3 51.2 29.5 51.2 C27 51.2 L27 51.2 Lf27 37.8 m27 27.7 L30 27.7 L31.7 27.7 32.7 28.5 32.7 30.9 C32.7 33.8 L32.7 36.8 31.7 37.8 29.4 37.8 C27 37.8 L27 37.8 Lf*U*u0 D50.7 23 m50.3 24.3 50.1 25.6 50.2 27 C50.2 32.2 L50.2 35.3 49.2 36.4 46.8 36.4 C45 36.4 L45 23 L39.8 23 L39.8 55.9 L47.6 55.9 L53 55.9 55.3 53.4 55.3 48.3 C55.3 45.7 L55.3 42.3 54.2 40.1 51.9 39 C54.5 37.9 55.3 35.4 55.3 32 C55.3 26.9 L55.2 25.5 55.4 24.2 55.9 22.9 C50.7 22.9 L50.7 22.9 50.7 23 Yf1 D45.1 51.2 m45.1 41.1 L47.1 41.1 L49 41.1 50.2 41.9 50.2 44.6 C50.2 47.8 L50.2 50.2 49.4 51.2 47.6 51.2 C45.1 51.2 L45.1 51.2 Lf*U*u0 D57.4 48 m57.4 53.3 60.2 56.3 65.3 56.3 c70.4 56.3 73.2 53.3 73.2 48 C73.2 30.9 L73.2 25.6 70.4 22.6 65.3 22.6 c60.2 22.6 57.4 25.6 57.4 30.9 C57.4 48 Lf1 D62.6 30.6 m62.6 28.3 63.6 27.4 65.3 27.4 c67 27.4 68 28.3 68 30.6 C68 48.4 L68 50.8 67 51.6 65.3 51.6 c63.6 51.6 62.6 50.7 62.6 48.4 C62.6 30.6 L62.6 30.6 Lf*U*u0 D92.2 23 m87 23 L86.1 29 L79.8 29 L78.9 23 L74.1 23 L79.4 55.9 L87 55.9 L92.2 23 Lf1 D80.4 33.4 m85.4 33.4 L82.9 50 L80.4 33.4 Lf*U*u0 D93.6 55.9 m101.8 55.9 L107 55.9 109.5 53 109.5 47.8 C109.5 31.2 L109.5 25.9 107 23.1 101.8 23.1 C93.6 23.1 L93.6 55.9 Lf1 D98.7 51.2 m98.7 27.7 L101.6 27.7 L103.2 27.7 104.2 28.5 104.2 30.9 C104.2 48 L104.2 50.4 103.2 51.2 101.6 51.2 C98.7 51.2 L98.7 51.2 Lf*U0 D126.8 35.3 m126.8 30.9 L126.8 25.6 124.2 22.6 119.1 22.6 c114 22.6 111.4 25.6 111.4 30.9 C111.4 48 L111.4 53.3 114 56.3 119.1 56.3 c124.2 56.3 126.8 53.3 126.8 48 C126.8 44.8 L121.9 44.8 L121.9 48.3 L121.9 50.7 120.9 51.5 119.2 51.5 c117.5 51.5 116.5 50.6 116.5 48.3 C116.5 30.5 L116.5 28.2 117.5 27.3 119.2 27.3 c120.9 27.3 121.9 28.1 121.9 30.5 C121.9 35.2 L126.8 35.3 L126.8 35.3 Lf*u145.6 23 m140.4 23 L139.5 29 L133.2 29 L132.3 23 L127.5 23 L132.8 55.9 L140.4 55.9 L145.6 23 Lf1 D133.8 33.4 m138.8 33.4 L136.3 50 L133.8 33.4 Lf*U0 D154 56.3 m159 56.3 161.6 53.3 161.6 48 C161.6 47 L156.7 47 L156.7 48.4 L156.7 50.8 155.8 51.6 154.1 51.6 c152.4 51.6 151.5 50.7 151.5 48.4 c151.5 41.6 161.6 40.4 161.6 31 c161.6 25.7 159 22.7 153.9 22.7 c148.8 22.7 146.2 25.7 146.2 31 C146.2 33 L151.1 33 L151.1 30.7 L151.1 28.4 152.1 27.5 153.8 27.5 c155.5 27.5 156.5 28.3 156.5 30.7 c156.5 37.5 146.4 38.7 146.4 48.1 c146.4 53.3 149 56.3 154 56.3 cf162.1 55.9 m178.1 55.9 L178.1 51.2 L172.7 51.2 L172.7 23 L167.5 23 L167.5 51.2 L162.1 51.2 L162.1 55.9 L162.1 55.9 Lf192.6 56.3 m197.6 56.3 200.2 53.3 200.2 48 C200.2 47 L195.3 47 L195.3 48.4 L195.3 50.8 194.4 51.6 192.7 51.6 c191 51.6 190.1 50.7 190.1 48.4 c190.1 41.6 200.2 40.4 200.2 31 c200.2 25.7 197.6 22.7 192.5 22.7 c187.4 22.7 184.8 25.7 184.8 31 C184.8 33 L189.7 33 L189.7 30.7 L189.7 28.4 190.7 27.5 192.4 27.5 c194.1 27.5 195.1 28.3 195.1 30.7 c195.1 37.5 185 38.7 185 48.1 c185 53.3 187.6 56.3 192.6 56.3 cf207.1 33.9 m200.6 55.9 L206 55.9 L210 40.9 L214 55.9 L218.9 55.9 L212.4 33.9 L212.4 23 L207.2 23 L207.1 33.9 L207.1 33.9 Lf226.9 56.3 m231.9 56.3 234.5 53.3 234.5 48 C234.5 47 L229.6 47 L229.6 48.4 L229.6 50.8 228.7 51.6 227 51.6 c225.3 51.6 224.4 50.7 224.4 48.4 c224.4 41.6 234.5 40.4 234.5 31 c234.5 25.7 231.9 22.7 226.8 22.7 c221.7 22.7 219.1 25.7 219.1 31 C219.1 33 L224 33 L224 30.7 L224 28.4 225 27.5 226.7 27.5 c228.4 27.5 229.4 28.3 229.4 30.7 c229.4 37.5 219.3 38.7 219.3 48.1 C219.2 53.3 221.8 56.3 226.9 56.3 cf235 55.9 m251 55.9 L251 51.2 L245.6 51.2 L245.6 23 L240.4 23 L240.4 51.2 L235 51.2 L235 55.9 L235 55.9 Lf257.4 42 m264.5 42 L264.5 37.3 L257.4 37.3 L257.4 27.7 L266.3 27.7 L266.3 23 L252.2 23 L252.2 55.9 L266.3 55.9 L266.3 51.2 L257.4 51.2 L257.4 42 Lf279.5 32.5 m283 55.9 L290.2 55.9 L290.2 23 L285.3 23 L285.3 46.6 L281.8 23 L276.9 23 L273 46.3 L273 23 L268.5 23 L268.5 55.9 L275.7 55.9 L279.5 32.5 Lf300.5 56.3 m305.5 56.3 308.1 53.3 308.1 48 C308.1 47 L303.2 47 L303.2 48.4 L303.2 50.8 302.3 51.6 300.6 51.6 c298.9 51.6 298 50.7 298 48.4 c298 41.6 308.1 40.4 308.1 31 c308.1 25.7 305.5 22.7 300.4 22.7 c295.3 22.7 292.7 25.7 292.7 31 C292.7 33 L297.6 33 L297.6 30.7 L297.6 28.4 298.6 27.5 300.3 27.5 c302 27.5 303 28.3 303 30.7 c303 37.5 292.9 38.7 292.9 48.1 C292.8 53.3 295.4 56.3 300.5 56.3 cf30 283.4 m41.3 283.4 L41.3 275.9 L30 275.9 L30 260.5 L44.2 260.5 L44.2 253 L21.8 253 L21.8 305.5 L44.3 305.5 L44.3 298 L30 298 L30 283.4 L30 283.4 Lf89.9 305.5 m81.2 280 L90.4 253 L81.7 253 L75 273.8 L68.2 253 L60.5 253 L69.7 280 L61.1 305.5 L69.7 305.5 L75.9 286.1 L82.3 305.5 L89.9 305.5 L89.9 305.5 Lf105.2 305.5 m130.7 305.5 L130.7 298 L122 298 L122 253 L113.8 253 L113.8 298 L105.2 298 L105.2 305.5 L105.2 305.5 Lf*u164.5 253 m164 254.4 163.7 255.2 163.7 259.5 C163.7 267.7 L163.7 272.6 162.1 274.4 158.3 274.4 C155.4 274.4 L155.4 253 L147.2 253 L147.2 305.5 L159.7 305.5 L168.2 305.5 171.9 301.5 171.9 293.4 C171.9 289.3 L171.9 283.9 170.2 280.4 166.5 278.7 C170.6 277 172 273 172 267.5 C172 259.4 L171.9 257.2 172.2 255.1 172.9 253 C164.5 253 L164.5 253 Lf1 D155.5 298 m155.5 281.9 L158.7 281.9 L161.8 281.9 163.7 283.3 163.7 287.4 C163.7 292.6 L163.7 296.4 162.4 298 159.5 298 C155.5 298 L155.5 298 Lf*U0 D198.6 283.4 m209.9 283.4 L209.9 275.9 L198.6 275.9 L198.6 260.5 L212.8 260.5 L212.8 253 L190.3 253 L190.3 305.5 L212.8 305.5 L212.8 298 L198.6 298 L198.6 283.4 L198.6 283.4 Lf248.4 268.2 m254 305.5 L265.5 305.5 L265.5 253 L257.7 253 L257.7 290.6 L252 253 L244.2 253 L238.1 290.1 L238.1 253 L230.9 253 L230.9 305.5 L242.4 305.5 L248.4 268.2 Lf292.7 283.4 m304 283.4 L304 275.9 L292.7 275.9 L292.7 260.5 L307 260.5 L307 253 L284.5 253 L284.5 305.5 L307 305.5 L307 298 L292.7 298 L292.7 283.4 L292.7 283.4 LfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF